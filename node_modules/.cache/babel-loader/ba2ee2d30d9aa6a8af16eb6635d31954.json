{"ast":null,"code":"var _jsxFileName = \"D:\\\\FE-coding\\\\Learning\\\\JavaScript\\\\Project_7_real_project_SpotifyAPI_searchSongAndMakePlaylist\\\\spotifyapi\\\\src\\\\Components\\\\App\\\\App.js\";\n//import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults'; // import Track from '../Track/Track'\n\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  //updateTitle\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      //before it was hard coded array, meaning the array was just filled w/ smth like a placeholder\n      playlistName: 'My Playlist',\n      //{playlistName: 'playlistName'}\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    //alert('this method is linked to the button correctly! :)')\n    const trackUris = this.state.playlistTracks.map(track => track.uri); //step 95 down\n\n    Spotify.savePlayList(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      });\n    });\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      //step 88\n      this.setState({\n        searchResults: searchResults\n      }); //step 88\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            searchResults: this.state.searchResults,\n            onAdd: this.addTrack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks,\n            onRemove: this.removeTrack //astea de ce nu au nevoie de .state ??\n            ,\n            onNameChange: this.updatePlaylistName,\n            onSave: this.savePlaylist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","SearchBar","SearchResults","Playlist","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","tracks","find","savedTrack","id","push","setState","filter","currentTrack","name","trackUris","map","uri","savePlayList","then","term","render"],"sources":["D:/FE-coding/Learning/JavaScript/Project_7_real_project_SpotifyAPI_searchSongAndMakePlaylist/spotifyapi/src/Components/App/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\n// import Track from '../Track/Track'\nimport Playlist from '../Playlist/Playlist'\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n\n//updateTitle\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [], //before it was hard coded array, meaning the array was just filled w/ smth like a placeholder\n      playlistName: 'My Playlist', //{playlistName: 'playlistName'}\n      playlistTracks: []\n    };\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({ playlistTracks: tracks })\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n\n    this.setState({ playlistTracks: tracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  savePlaylist() {\n    //alert('this method is linked to the button correctly! :)')\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    //step 95 down\n    Spotify.savePlayList(this.state.playlistName, trackUris).then(() => {\n      this.setState({ \n        playlistName: 'New Playlist',\n        playlistTracks: []\n       })\n    })\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {       //step 88\n      this.setState({ searchResults: searchResults })  //step 88\n    });\n  }\n\n  render() {\n    return(\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n          <div className=\"App\">\n            <SearchBar onSearch={this.search} />\n            <div className=\"App-playlist\">\n              <SearchResults \n              searchResults={this.state.searchResults} \n              onAdd={this.addTrack}\n              />\n              <Playlist \n              playlistName={this.state.playlistName} \n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack} //astea de ce nu au nevoie de .state ??\n              onNameChange={this.updatePlaylistName} \n              onSave={this.savePlaylist}/>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,gCAA1B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;EAElC;EAEEC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,aAAa,EAAE,EADJ;MACQ;MACnBC,YAAY,EAAE,aAFH;MAEkB;MAC7BC,cAAc,EAAE;IAHL,CAAb;IAMA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;IACA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;IACA,KAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;IACA,KAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;IACA,KAAKI,MAAL,GAAc,KAAKA,MAAL,CAAYJ,IAAZ,CAAiB,IAAjB,CAAd;EACD;;EAEDD,QAAQ,CAACM,KAAD,EAAQ;IACd,IAAIC,MAAM,GAAG,KAAKX,KAAL,CAAWG,cAAxB;;IACA,IAAIQ,MAAM,CAACC,IAAP,CAAYC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBJ,KAAK,CAACI,EAAlD,CAAJ,EAA2D;MACzD;IACD;;IAEDH,MAAM,CAACI,IAAP,CAAYL,KAAZ;IACA,KAAKM,QAAL,CAAc;MAAEb,cAAc,EAAEQ;IAAlB,CAAd;EACD;;EAEDL,WAAW,CAACI,KAAD,EAAQ;IACjB,IAAIC,MAAM,GAAG,KAAKX,KAAL,CAAWG,cAAxB;IACAQ,MAAM,GAAGA,MAAM,CAACM,MAAP,CAAcC,YAAY,IAAIA,YAAY,CAACJ,EAAb,KAAoBJ,KAAK,CAACI,EAAxD,CAAT;IAEA,KAAKE,QAAL,CAAc;MAAEb,cAAc,EAAEQ;IAAlB,CAAd;EACD;;EAEDJ,kBAAkB,CAACY,IAAD,EAAO;IACvB,KAAKH,QAAL,CAAc;MAAEd,YAAY,EAAEiB;IAAhB,CAAd;EACD;;EAEDX,YAAY,GAAG;IACb;IACA,MAAMY,SAAS,GAAG,KAAKpB,KAAL,CAAWG,cAAX,CAA0BkB,GAA1B,CAA8BX,KAAK,IAAIA,KAAK,CAACY,GAA7C,CAAlB,CAFa,CAGb;;IACA3B,OAAO,CAAC4B,YAAR,CAAqB,KAAKvB,KAAL,CAAWE,YAAhC,EAA8CkB,SAA9C,EAAyDI,IAAzD,CAA8D,MAAM;MAClE,KAAKR,QAAL,CAAc;QACZd,YAAY,EAAE,cADF;QAEZC,cAAc,EAAE;MAFJ,CAAd;IAID,CALD;EAMD;;EAEDM,MAAM,CAACgB,IAAD,EAAO;IACX9B,OAAO,CAACc,MAAR,CAAegB,IAAf,EAAqBD,IAArB,CAA0BvB,aAAa,IAAI;MAAQ;MACjD,KAAKe,QAAL,CAAc;QAAEf,aAAa,EAAEA;MAAjB,CAAd,EADyC,CACQ;IAClD,CAFD;EAGD;;EAEDyB,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAA,8BAAM;UAAM,SAAS,EAAC,WAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAN;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEI;QAAK,SAAS,EAAC,KAAf;QAAA,wBACE,QAAC,SAAD;UAAW,QAAQ,EAAE,KAAKjB;QAA1B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,cAAf;UAAA,wBACE,QAAC,aAAD;YACA,aAAa,EAAE,KAAKT,KAAL,CAAWC,aAD1B;YAEA,KAAK,EAAE,KAAKG;UAFZ;YAAA;YAAA;YAAA;UAAA,QADF,eAKE,QAAC,QAAD;YACA,YAAY,EAAE,KAAKJ,KAAL,CAAWE,YADzB;YAEA,cAAc,EAAE,KAAKF,KAAL,CAAWG,cAF3B;YAGA,QAAQ,EAAE,KAAKG,WAHf,CAG4B;YAH5B;YAIA,YAAY,EAAE,KAAKC,kBAJnB;YAKA,MAAM,EAAE,KAAKC;UALb;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAoBD;;AA/E+B;;AAkFlC,eAAeZ,GAAf"},"metadata":{},"sourceType":"module"}